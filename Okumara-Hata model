package main

import (
	"fmt"
	"os"
	"strconv"
)
import "math"

func check(e error) {
	if e != nil {
		panic(e)
	}
}
func A(fc int64, hb int) float64 {
	b := math.Log10(float64(fc))
	c := math.Log10(float64(hb))
	ret := 69.55 + 26.16*b - 13.82*c
	return (ret)

}
func B(hb int) float64 {
	b := 44.9 - 6.55*(math.Log10(float64(hb)))
	return (b)
}
func E(fc int64, hm int) float64 {
	if fc > 300 {
		b := math.Log10(11.5774 * float64(hm))
		ret := 3.2*(b*b) - 4.97
		return (ret)
	} else {
		b := math.Log10(1.54 * float64(hm))
		ret := 8.29*b*b - 1.1
		return (ret)
	}
}

func main() {
	//var PathLos float64
	var hb int
	var fc int64
	var PathLos [12][28]float64
	hb = 30
	f, err := os.Create("/home/richard/matlab/bin/summer/hatavalues.txt")
	check(err)
	//fc = 1000
	hm := 1
	j := 0
	i := 0
	R := []int{1, 2, 5, 10, 20, 30, 40, 50, 60, 70, 80, 100}
	for fc = 400; fc < 2000; {
		i = 0
		for i := 0; i < 12; i++ {

			PathLos[i][j] = A(int64(fc), hb) + B(hb)*(math.Log10(float64(R[i]))) - E(int64(fc), hm)
			fmt.Printf("Pathloss(in Db)= %f for FREQ(Hz)=%d \n", PathLos[i][j], fc)
			snr1 := strconv.FormatFloat(PathLos[i][j], 'f', 4, 64)
			_, err := f.WriteString(snr1)
			check(err)
			_, err = f.WriteString(" ")
			check(err)

		}
		_, err = f.WriteString("\n")
		check(err)
		fc = fc + 200
		j++

	}
	for i = 0; i < 12; i++ {
		snr1 := strconv.FormatFloat(float64(R[i]), 'f', 4, 64)
		_, err := f.WriteString(snr1)
		check(err)
		_, err = f.WriteString(" ")
		check(err)

	}
	f.Sync()
	f.Close()
}
